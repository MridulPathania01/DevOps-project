name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # GitHub Secrets
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # GitHub Secrets
          aws-region: ap-south-1

      - name: Authenticate Docker with AWS ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t mridulpathania/flask-backend:latest .
          docker tag mridulpathania/flask-backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/mridulpathania/flask-backend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/mridulpathania/flask-backend:latest

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Deploy with Terraform
        run: |
          terraform init
          terraform apply -var="docker_image_url=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/mridulpathania/flask-backend:latest" \
                           -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                           -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                           -var="api_key=${{ secrets.MY_API_KEY }}" \
                           -auto-approve
        working-directory: terraform
